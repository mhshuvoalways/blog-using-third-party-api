{"version":3,"sources":["utils/axios.js","news/index.js","components/Header.jsx","components/NewsList.jsx","components/Pagination.jsx","components/Loading.jsx","App.js","serviceWorker.js","index.js"],"names":["intence","Axios","create","baseURL","newsCategory","technology","science","business","entertainment","general","health","sports","News","category","this","_category","_searchTerm","_pageSize","_currentPage","_totalPage","get","_getUrl","data","Math","ceil","totalResults","articles","isNext","_isNext","isPrevious","_isPrevious","totalPage","currentPage","Error","getNews","pageNumber","term","url","Header","state","searchTerm","onChangeHandle","event","setState","target","value","onKeyPressHandle","e","key","props","search","render","changeCategory","className","style","fontWeight","type","placeholder","onChange","onKeyPress","ref","innerRef","Object","keys","map","item","onClick","Component","AnonymousComponent","React","forwardRef","NewsItem","dateTimeStr","el","push","urlToImage","src","alt","href","rel","color","title","content","publishedAt","Date","toDateString","padding","background","borderRadius","display","source","name","NewsList","news","length","index","Pagination","isEditable","next","prev","handlePageChange","gotoPage","disabled","userSelect","lineHeight","onDoubleClick","Loading","role","aria-hidden","App","isLoading","aboutResult","createRef","searchRef","cbRef","itemRefList","then","catch","err","alert","Number","parseInt","setCurrentPage","setChangeCategory","gotoTop","window","scroll","current","scrollTop","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.4349e79e.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nlet baseURL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://blog-using-third-party-api.vercel.app\"\r\n    : \"http://localhost:5000\";\r\n\r\nconst intence = Axios.create({\r\n  baseURL,\r\n});\r\n\r\nexport default intence;\r\n","import Axios from '../utils/axios'\r\n\r\nexport const newsCategory = {\r\n    technology: 'technology',\r\n    science: 'science',\r\n    business: 'business',\r\n    entertainment: 'entertainment',\r\n    general: 'general',\r\n    health: 'health',\r\n    sports: 'sports'\r\n}\r\n\r\nconst MAX_ITEM_PAR_PAGE = 10\r\n\r\nclass News {\r\n    constructor(category) {\r\n        this._category = category\r\n        this._searchTerm = ''\r\n        this._pageSize = MAX_ITEM_PAR_PAGE\r\n        this._currentPage = 1\r\n        this._totalPage = 1\r\n    }\r\n\r\n    async getNews() {\r\n        try {\r\n            const { data } = await Axios.get(`/api/${this._getUrl()}`)\r\n            this._totalPage = Math.ceil(data.totalResults / this._pageSize)\r\n            return {\r\n                articles: data.articles,\r\n                isNext: this._isNext(),\r\n                isPrevious: this._isPrevious(),\r\n                totalResults: data.totalResults,\r\n                category: this._category,\r\n                totalPage: this._totalPage,\r\n                currentPage: this._currentPage\r\n            }\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n    next() {\r\n        if (this._isNext()) {\r\n            this._currentPage++\r\n            return this.getNews()\r\n        }\r\n        return false\r\n    }\r\n\r\n    prev() {\r\n        if (this._isPrevious()) {\r\n            this._currentPage--\r\n            return this.getNews()\r\n        }\r\n        return false\r\n    }\r\n\r\n    setCurrentPage(pageNumber) {\r\n        if (pageNumber < 1 && pageNumber > this._totalPage) {\r\n            throw new Error('Invaid page number')\r\n        }\r\n        this._currentPage = pageNumber\r\n        return this.getNews()\r\n    }\r\n\r\n    setChangeCategory(category) {\r\n        this._category = category\r\n        this._currentPage = 1\r\n        return this.getNews()\r\n    }\r\n\r\n    search(term) {\r\n        this._searchTerm = term\r\n        return this.getNews()\r\n    }\r\n\r\n    _getUrl() {\r\n        let url = ''\r\n\r\n        if (this._category) url += `&category=${this._category}`\r\n        if (this._searchTerm) url += `&q=${this._searchTerm}`\r\n        if (this._pageSize) url += `&pageSize=${this._pageSize}`\r\n        if (this._currentPage) url += `&page=${this._currentPage}`\r\n\r\n        return url\r\n    }\r\n\r\n    _isNext() {\r\n        return this._currentPage < this._totalPage\r\n    }\r\n\r\n    _isPrevious() {\r\n        return this._currentPage > 1\r\n    }\r\n\r\n}\r\n\r\nexport default News","import React, { Component } from 'react'\r\nimport { newsCategory } from '../news/index'\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        searchTerm: ''\r\n    }\r\n\r\n    onChangeHandle = (event) => {\r\n        this.setState({ searchTerm: event.target.value })\r\n    }\r\n\r\n    onKeyPressHandle = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.props.search(this.state.searchTerm)\r\n        }\r\n    }\r\n\r\n    render = function () {\r\n        let { category, changeCategory } = this.props\r\n        return (\r\n            <div className='my-4'>\r\n                <h1 className='mb-4' style={{ fontWeight: '300' }}>\r\n                    Block Buster Headlines\r\n                </h1>\r\n                <input\r\n                    type='search'\r\n                    placeholder='Type anything & Press enter to search'\r\n                    className='form-control'\r\n                    onChange={this.onChangeHandle}\r\n                    onKeyPress={this.onKeyPressHandle}\r\n                    ref={this.props.innerRef} />\r\n\r\n                <div className='my-4'>\r\n                    {newsCategory && Object.keys(newsCategory).map(item => {\r\n                        if (category === newsCategory[item]) {\r\n                            return (\r\n                                <button\r\n                                    className='btn btn-sm btn-warning mr-2 mb-2'\r\n                                    onClick={() => changeCategory(newsCategory[item])} >\r\n                                    {`# ${newsCategory[item]}`}\r\n                                </button>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <button\r\n                                    className='btn btn-sm btn-light mr-2 mb-2'\r\n                                    onClick={() => changeCategory(newsCategory[item])}>\r\n                                    {`# ${newsCategory[item]}`}\r\n                                </button>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst AnonymousComponent = React.forwardRef((props, ref) => {\r\n    return (\r\n        <Header\r\n            {...props}\r\n            innerRef={ref} />\r\n    )\r\n})\r\n\r\nexport default AnonymousComponent\r\n","import React from \"react\";\r\n\r\nfunction getDateString(dateTimeStr) {\r\n  return new Date(dateTimeStr).toDateString();\r\n}\r\n\r\nconst NewsItem = React.forwardRef(({ item }, ref) => (\r\n  <div ref={(el) => ref.push(el)} className=\"card mb-4\">\r\n    {item.urlToImage && (\r\n      <img\r\n        className=\"card-img-top\"\r\n        src={item.urlToImage}\r\n        alt={item.urlToImage}\r\n      />\r\n    )}\r\n    <div className=\"card-body\">\r\n      <a\r\n        href={item.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{ color: \"#424242\" }}\r\n      >\r\n        <h5 className=\"card-title\">{item.title}</h5>\r\n      </a>\r\n      <a\r\n        href={item.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{ color: \"#424242\" }}\r\n      >\r\n        {item.content}\r\n      </a>\r\n      <div className=\"mt-2 d-flex align-item-center\">\r\n        <small>\r\n          <strong>Published at {getDateString(item.publishedAt)}</strong>\r\n        </small>\r\n        <div\r\n          style={{\r\n            padding: \"0.25rem 0.5rem\",\r\n            background: \"#ededed\",\r\n            color: \"#424242\",\r\n            borderRadius: \"0.25rem\",\r\n            display: \"inline-block\",\r\n          }}\r\n          className=\"ml-auto\"\r\n        >\r\n          <small>{item.source.name}</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n));\r\n\r\nconst NewsList = React.forwardRef(({ news }, ref) => {\r\n  return (\r\n    <div>\r\n      {news && news.length === 0 && <h4>There is no News</h4>}\r\n      {news &&\r\n        news.map((item, index) => (\r\n          <div key={index}>\r\n            <NewsItem ref={ref} item={item} />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default NewsList;\r\n","import React, { Component } from 'react'\r\n\r\nclass Pagination extends Component {\r\n    state = {\r\n        isEditable: false\r\n    }\r\n    render() {\r\n        const {\r\n            next,\r\n            prev,\r\n            isNext,\r\n            isPrevious,\r\n            totalPage,\r\n            currentPage,\r\n            handlePageChange,\r\n            gotoPage\r\n        } = this.props\r\n        return (\r\n            <div className='d-flex my-5 align-items-center'>\r\n                <button\r\n                    className='btn btn-warning'\r\n                    disabled={!isPrevious}\r\n                    onClick={() => prev()}>\r\n                    Previous\r\n                    </button>\r\n                <div className='flex-grow-1 text-center'>\r\n                    {this.state.isEditable ? (\r\n                        <input type='number'\r\n                            value={currentPage}\r\n                            onChange={(event) => handlePageChange(event.target.value)}\r\n                            onKeyPress={(e)=> {\r\n                                if(e.key ==='Enter') {\r\n                                    gotoPage()\r\n                                    this.setState({isEditable:false})\r\n                                }\r\n                            }} />\r\n                    ) : (\r\n                            <p\r\n                                style={{ userSelect: 'none', lineHeight: '1.1' }}\r\n                                title='Double Tab to Jumb Page'\r\n                                onDoubleClick={() => {\r\n                                    this.setState({ isEditable: !this.state.isEditable })\r\n                                }}>\r\n                                {currentPage} of {totalPage}\r\n                                <br />\r\n                                <small>Double Tab to Edit</small>\r\n                            </p>\r\n                        )\r\n                    }\r\n                </div>\r\n                <button\r\n                    className='btn btn-warning ml-auto'\r\n                    disabled={!isNext}\r\n                    onClick={() => next()}>\r\n                    Next\r\n                 </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className='d-flex align-items-center'>\r\n            <strong>Loading...</strong>\r\n            <div\r\n                className='spinner-border text-danger ml-auto'\r\n                role='status'\r\n                aria-hidden='true'>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { Component } from 'react'\r\nimport Header from './components/Header';\r\nimport News, { newsCategory } from './news/index'\r\nimport NewsList from './components/NewsList'\r\nimport Pagination from './components/Pagination'\r\nimport Loading from './components/Loading'\r\n\r\nconst news = new News(newsCategory.technology)\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    data: {},\r\n    isLoading: true\r\n  }\r\n\r\n  aboutResult = React.createRef()\r\n  searchRef = React.createRef()\r\n  cbRef = null\r\n  itemRefList = []\r\n\r\n  componentDidMount() {\r\n    news.getNews()\r\n      .then(data => {\r\n        this.setState({ data, isLoading: false })\r\n      })\r\n      .catch(err => {\r\n        alert('Something went wrong')\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  next = () => {\r\n    if (this.state.data.isNext) {\r\n      this.setState({ isLoading: true })\r\n    }\r\n    news.next()\r\n      .then(data => {\r\n        this.setState({ data, isLoading: false })\r\n      })\r\n      .catch(err => {\r\n        alert('Something went wrong')\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  prev = () => {\r\n    if (this.state.data.isPrevious) {\r\n      this.setState({ isLoading: true })\r\n    }\r\n    news.prev()\r\n      .then(data => {\r\n        this.setState({ data, isLoading: false })\r\n      })\r\n      .catch(err => {\r\n        alert('Something went wrong')\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  handlePageChange = value => {\r\n    this.setState({\r\n      data: {\r\n        ...this.state.data,\r\n        currentPage: Number.parseInt(value)\r\n      }\r\n    })\r\n  }\r\n\r\n  gotoPage = () => {\r\n    this.setState({ isLoading: true })\r\n    news.setCurrentPage(this.state.data.currentPage)\r\n      .then(data => {\r\n        this.setState({ data, isLoading: false })\r\n      })\r\n      .catch(err => {\r\n        alert('Something went wrong')\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  changeCategory = category => {\r\n    this.setState({ isLoading: true })\r\n    news.setChangeCategory(category)\r\n      .then(data => {\r\n        this.setState({ data, isLoading: false })\r\n      })\r\n      .catch(err => {\r\n        alert('Something went wrong')\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  search = searchTerm => {\r\n    this.setState({ isLoading: true })\r\n    news.search(searchTerm)\r\n      .then(data => {\r\n        this.setState({ data, isLoading: false })\r\n      })\r\n      .catch(err => {\r\n        alert('Something went wrong')\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  gotoTop = () => {\r\n    window.scroll(0, this.aboutResult.current.scrollTop)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      articles,\r\n      isPrevious,\r\n      isNext,\r\n      category,\r\n      totalResults,\r\n      currentPage,\r\n      totalPage } = this.state.data;\r\n      \r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-sm-6 offset-md-3'>\r\n            <Header\r\n              ref={this.searchRef}\r\n              category={category}\r\n              changeCategory={this.changeCategory}\r\n              search={this.search} />\r\n            <div className='d-flex' ref={this.aboutResult}>\r\n              <p ref={(el) => this.cbRef = el} className='text-black-50'>About {totalResults} result found</p>\r\n              <p className='text-black-50 ml-auto'>{currentPage} page of {totalPage}</p>\r\n            </div>\r\n            {this.state.isLoading ? (\r\n              <Loading />\r\n            ) : (\r\n              <div>\r\n                <NewsList ref={this.itemRefList} news={articles} />\r\n                <Pagination\r\n                  next={this.next}\r\n                  prev={this.prev}\r\n                  isNext={isNext}\r\n                  isPrevious={isPrevious}\r\n                  totalPage={totalPage}\r\n                  currentPage={currentPage}\r\n                  handlePageChange={this.handlePageChange}\r\n                  gotoPage={this.gotoPage} />\r\n              </div>\r\n            )}\r\n            <button onClick={this.gotoTop} className='btn btn-primary' >Go to top</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nif (process.env.NODE_ENV !== \"development\") {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n} else {\r\n  ReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}